# Generated by Django 5.1.2 on 2025-10-25 23:48

import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthProgramPartners',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='health_program_partners/logos/')),
                ('url', models.URLField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthProgramType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InterventionField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('field_type', models.CharField(choices=[('TEXT', 'Text'), ('NUMBER', 'Number'), ('DATE', 'Date')], default='TEXT')),
                ('name', models.CharField(max_length=255)),
                ('required', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocumJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('requirements', models.TextField(blank=True)),
                ('location', models.CharField(max_length=255)),
                ('title_image', models.ImageField(blank=True, null=True, upload_to='locum_jobs/title_images/')),
                ('renumeration', models.DecimalField(decimal_places=2, max_digits=19)),
                ('renumeration_frequency', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocumJobRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthProgram',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('program_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('location_name', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_details', models.TextField(blank=True)),
                ('target_participants', models.IntegerField(help_text='Estimated number of participants')),
                ('actual_participants', models.IntegerField(default=0, help_text='Actual number reached')),
                ('funding_source', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('equipment_needs', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs_created', to=settings.AUTH_USER_MODEL)),
                ('partner_organizations', models.ManyToManyField(blank=True, related_name='health_programs_partners', to='communities.healthprogrampartners')),
                ('program_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='health_programs', to='communities.healthprogramtype')),
            ],
            options={
                'verbose_name': 'Health Program',
                'verbose_name_plural': 'Health Programs',
                'db_table': 'community_health_programs',
                'ordering': ['-start_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BulkInterventionUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='bulk_uploads/interventions/')),
                ('file_name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partially Completed')], default='pending', max_length=20)),
                ('total_rows', models.IntegerField(default=0)),
                ('processed_rows', models.IntegerField(default=0)),
                ('successful_rows', models.IntegerField(default=0)),
                ('failed_rows', models.IntegerField(default=0)),
                ('errors', models.JSONField(blank=True, default=list)),
                ('processing_log', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_uploads', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_uploads', to='communities.healthprogram')),
            ],
            options={
                'verbose_name': 'Bulk Intervention Upload',
                'verbose_name_plural': 'Bulk Intervention Uploads',
                'db_table': 'bulk_intervention_uploads',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='InterventionFieldOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('option', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='communities.interventionfield')),
            ],
        ),
        migrations.CreateModel(
            name='InterventionResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('participant_id', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='The phone number of the participant', max_length=128, null=True, region=None)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('patient_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intervention_field_responses', to='patients.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='InterventionResponseValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('field', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responses', to='communities.interventionfield')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='response_values', to='communities.interventionresponse')),
            ],
        ),
        migrations.CreateModel(
            name='HealthProgramLocumNeed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locum_needs', to='communities.healthprogram')),
                ('locum_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locum_needs', to='communities.locumjob')),
            ],
        ),
        migrations.AddField(
            model_name='locumjob',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locum_jobs', to='communities.locumjobrole'),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('organization_name', models.CharField(blank=True, max_length=200, null=True)),
                ('organization_type', models.CharField(blank=True, max_length=100, null=True)),
                ('organization_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('organization_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('organization_address', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('orgnaization_logo', models.ImageField(blank=True, null=True, upload_to='orgnaization_logos/')),
                ('verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='community_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'db_table': 'organizations',
            },
        ),
        migrations.AddField(
            model_name='locumjobrole',
            name='organization',
            field=models.ManyToManyField(blank=True, related_name='locum_job_roles', to='communities.organization'),
        ),
        migrations.AddField(
            model_name='locumjob',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locum_jobs', to='communities.organization'),
        ),
        migrations.AddField(
            model_name='healthprogramtype',
            name='organizations',
            field=models.ManyToManyField(blank=True, related_name='health_program_types', to='communities.organization'),
        ),
        migrations.AddField(
            model_name='healthprogram',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='Community organization managing this program', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='health_programs', to='communities.organization'),
        ),
        migrations.CreateModel(
            name='OrganizationFiles',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('document_type', models.CharField(blank=True, choices=[('certificate', 'Certificate'), ('license', 'License'), ('other', 'Other')], max_length=100, null=True)),
                ('file', models.FileField(upload_to='organization_files/')),
                ('file_type', models.CharField(blank=True, max_length=100, null=True)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='communities.organization')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramIntervention',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('program', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='intervention', to='communities.healthprogram')),
            ],
            options={
                'verbose_name': 'Program Intervention',
                'verbose_name_plural': 'Program Interventions',
                'db_table': 'program_interventions',
            },
        ),
        migrations.AddField(
            model_name='interventionresponse',
            name='intervention',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intervention_responses', to='communities.programintervention'),
        ),
        migrations.AddField(
            model_name='interventionfield',
            name='intervention',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='communities.programintervention'),
        ),
        migrations.CreateModel(
            name='ProgramInterventionType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizations', models.ManyToManyField(blank=True, related_name='program_intervention_types', to='communities.organization')),
            ],
        ),
        migrations.AddField(
            model_name='programintervention',
            name='intervention_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interventions', to='communities.programinterventiontype'),
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=240)),
                ('description', models.TextField()),
                ('end_date', models.DateField()),
                ('active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='BulkSurveyUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='bulk_uploads/surveys/')),
                ('file_name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partially Completed')], default='pending', max_length=20)),
                ('total_rows', models.IntegerField(default=0)),
                ('processed_rows', models.IntegerField(default=0)),
                ('successful_rows', models.IntegerField(default=0)),
                ('failed_rows', models.IntegerField(default=0)),
                ('errors', models.JSONField(blank=True, default=list)),
                ('processing_log', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_bulk_uploads', to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_uploads', to='communities.survey')),
            ],
            options={
                'verbose_name': 'Bulk Survey Upload',
                'verbose_name_plural': 'Bulk Survey Uploads',
                'db_table': 'bulk_survey_uploads',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='SurveyQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('question_type', models.CharField(choices=[('TEXT', 'Text'), ('MULTIPLE CHOICE', 'Multiple Choice'), ('MULTIPLE SELECT', 'Multiple Select')])),
                ('question', models.CharField(max_length=240)),
                ('required', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, null=True, unique=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='communities.survey')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='SurveyQuestionOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('option', models.CharField(max_length=240)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, null=True, unique=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='communities.surveyquestion')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='communities.survey')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='SurveyResponseAnswers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('answer', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='communities.surveyquestion')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='communities.surveyresponse')),
            ],
            options={
                'ordering': ('response', 'question', 'date_created'),
            },
        ),
        migrations.CreateModel(
            name='SurveyType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizations', models.ManyToManyField(blank=True, related_name='survey_types', to='communities.organization')),
            ],
        ),
        migrations.AddField(
            model_name='survey',
            name='survey_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='surveys', to='communities.surveytype'),
        ),
        migrations.AddIndex(
            model_name='healthprogram',
            index=models.Index(fields=['status', 'start_date'], name='community_h_status_2460f2_idx'),
        ),
        migrations.AddIndex(
            model_name='healthprogram',
            index=models.Index(fields=['program_type'], name='community_h_program_3bbe44_idx'),
        ),
        migrations.AddIndex(
            model_name='healthprogram',
            index=models.Index(fields=['district', 'region'], name='community_h_distric_af3eb5_idx'),
        ),
        migrations.AddIndex(
            model_name='healthprogram',
            index=models.Index(fields=['organization'], name='community_h_organiz_228c98_idx'),
        ),
        migrations.AddIndex(
            model_name='healthprogram',
            index=models.Index(fields=['created_by'], name='community_h_created_1dce50_idx'),
        ),
        migrations.AddIndex(
            model_name='programintervention',
            index=models.Index(fields=['program'], name='program_int_program_77a3e2_idx'),
        ),
        migrations.AddIndex(
            model_name='programintervention',
            index=models.Index(fields=['intervention_type'], name='program_int_interve_0716d2_idx'),
        ),
    ]
